# Include the User-Supplied Configuration File
include ../../config/config.mk

# Group all Fortran Flags Together
FF90_ALL_FLAGS = $(FF90_FLAGS) $(CGNS_FLAGS)
CC_ALL_FLAGS = $(CC_FLAGS)
FPP_F90FLAGS = -x f95-cpp-input -fPIC

PYTHON_MODN = f90wrapTemplate_pyf90_cs
#==============================================================================
# Include Files
#==============================================================================
# Include Compiler Rules
include rules

# Include Filenames
include fileList

# Include All Directories
include directoryList

# Include Wrapping Information
include wrapping

KIND_MAP = kind_map
#==============================================================================
# Set Macro Compiler Rules
#==============================================================================
# Set Path and Subpath Directories
dirs := $(addprefix ../,$(dirs))
VPATH := $(dirs)

# Generate Object Files (.f90 and .o)
fortranFiles := $(addprefix ../,$(fortranFiles))
cFiles := $(addprefix ../,$(cFiles))
f77Files := $(addprefix ../,$(f77Files))

fortranFilesNoDir = $(notdir $(fortranFiles))
cFilesNoDir=$(notdir $(cFiles))
f77FilesNoDir=$(notdir $(f77Files))

OBJECTS = $(fortranFiles) $(cFiles) $(f77Files)

OFILES = $(fortranFilesNoDir:%.f90=%.o) $(f77FilesNoDir:%.f=%.o) $(cFilesNoDir:%.c=%.o) 
FOBJ = $(OFILES)

FPPFILES = $(fortranFilesNoDir:%.f90=%.fpp)

# Note Phony Targets
.PHONY: depend all

#==============================================================================
# Setup Python Wrapping
#==============================================================================
UNAME = $(shell uname)

ifeq (${UNAME}, Darwin)
  LIBTOOL = libtool -static -o
else
  LIBTOOL = ar src
endif
#==============================================================================
# Generate Dependency Structure
#==============================================================================
# $(DEP_FILE) is a .depend file generated by fort_depend Python package
DEP_FILE = .depend

# Make dependencies
depend: $(DEP_FILE)

# Generate Dependency File
$(DEP_FILE): $(OBJECTS)
	@echo "Making dependencies!"
	$(MAKEDEPEND) -w -o $(DEP_FILE) -f $(OBJECTS)

# Include Dependency Structure
include $(DEP_FILE)

#==============================================================================
# Build Python-Fortran Library
#==============================================================================
f90wrapTemplate_cs: _$(PYTHON_MODN).so

#==============================================================================
# Make Library
#==============================================================================
libsrc.a: $(FOBJ)
	$(LIBTOOL) $@ $?

#==============================================================================
# Run f90wrap
#==============================================================================
_$(PYTHON_MODN).so: libsrc.a $(FPPFILES)
	@echo
	@echo "--------------- Compiling Complexified f90wrapTemplate Python --------------"
	f90wrap -m $(PYTHON_MODN) $(wrap_files) --only $(wrap_subroutines) -k $(KIND_MAP) -P -v --py-max-line-length 120
	f2py-f90wrap --f90exec=$(FF90) --f77exec=$(FF90) --build-dir . -c -m _${PYTHON_MODN} -L. -lsrc f90wrap*.f90 $(INCLUDES) -lgfortran
	@echo "--------- Compiled Complexified f90wrapTemplate Python Successfully --------"
	@echo

#==============================================================================
# Clean Build
#==============================================================================
clean_build:
	rm -f *.fpp *.o *.mod .depend libsrc.a f90wrap*.f90 .f2py_f2cmap _f90wrapTemplate_pyf90* f90wrap_*.f90
	rm -f -r src.macosx* .libs __pycache__
